package uz.example.dagger_2_android3.ui.homeimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport uz.example.dagger_2_android3.core.base.BaseViewModelimport uz.example.dagger_2_android3.core.model.Articleimport uz.example.dagger_2_android3.core.repo.MainRepoimport uz.example.dagger_2_android3.core.utils.ResultWrapperimport javax.inject.Injectclass HomeVM @Inject constructor(var mainRepo: MainRepo) : BaseViewModel() {    private val topHeadlineLiveData = MutableLiveData<List<Article>?>()    val topHeadlineResponse: LiveData<List<Article>?>        get() = topHeadlineLiveData    private val errorLiveData = MutableLiveData<String?>()    val errorResponse: LiveData<String?>        get() = errorLiveData    fun loadTopHeadline() {        launch {            val response = mainRepo.loadTopHeadline()            when (response) {                is ResultWrapper.Success -> {                    topHeadlineLiveData.postValue(response.response?.articles)                }                is ResultWrapper.ErrorResponse -> {                    errorLiveData.postValue(response.error.toString())                }                is ResultWrapper.NetworkError -> {                    errorLiveData.postValue("Internet ishlamadi")                }            }        }    }}